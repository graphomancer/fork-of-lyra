Bootstrap: docker
From: nvidia/cuda:12.4.1-devel-ubuntu22.04

%post
    # Set environment variables
    export DEBIAN_FRONTEND=noninteractive
    export CUDA_HOME=/usr/local/cuda

    # Update and install system dependencies
    apt-get update && apt-get install -y \
        software-properties-common \
        wget \
        git \
        build-essential \
        cmake \
        ninja-build \
        vim \
        && rm -rf /var/lib/apt/lists/*

    # Install GCC 12
    add-apt-repository ppa:ubuntu-toolchain-r/test -y
    apt-get update && apt-get install -y \
        gcc-12 \
        g++-12 \
        && rm -rf /var/lib/apt/lists/*

    # Set GCC 12 as default
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 100

    # Install Python 3.10
    add-apt-repository ppa:deadsnakes/ppa -y
    apt-get update && apt-get install -y \
        python3.10 \
        python3.10-dev \
        python3.10-venv \
        python3-pip \
        && rm -rf /var/lib/apt/lists/*

    # Set Python 3.10 as default
    update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1

    # Upgrade pip
    python3.10 -m pip install --upgrade pip setuptools wheel

    # Create a working directory
    mkdir -p /workspace
    cd /workspace

%environment
    export CUDA_HOME=/usr/local/cuda
    export PATH=/usr/local/cuda/bin:$PATH
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
    export PYTHONPATH=/workspace:$PYTHONPATH

%runscript
    echo "Lyra training container"
    echo "CUDA version: $(nvcc --version | grep release)"
    echo "Python version: $(python --version)"
    echo "GCC version: $(gcc --version | head -n1)"
    exec /bin/bash "$@"

%labels
    Author Lyra Setup
    Version v1.0
    Description Apptainer container for NVIDIA Lyra training
